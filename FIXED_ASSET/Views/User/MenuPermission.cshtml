
@{
    ViewBag.Title = "Menu Permission";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="~/Content/css/select2.css" rel="stylesheet" />
<script src="~/Content/js/select2.full.min.js"></script>
<link href="https://www.jqueryscript.net/css/jquerysctipttop.css" rel="stylesheet" type="text/css">


<style>
    /* The container */
    .container, ul li.container {
        display: block;
        position: relative;
        padding-left: 35px;
        margin-bottom: 12px;
        cursor: pointer;
        font-size: 15px;
        -webkit-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        user-select: none;
    }

        /* Hide the browser's default checkbox */
        .container input, ul li.container input {
            position: absolute;
            opacity: 0;
        }

    /* Create a custom checkbox */
    .checkmark {
        position: absolute;
        top: 0;
        left: 0;
        height: 25px;
        width: 25px;
        background-color: #eee;
    }

    /* On mouse-over, add a grey background color */
    .container:hover input ~ .checkmark, ul li.container:hover input ~ .checkmark {
        background-color: #ccc;
    }

    /* When the checkbox is checked, add a blue background */
    .container input:checked ~ .checkmark, ul li.container input:checked ~ .checkmark {
        background-color: #2196F3;
    }

    /* Create the checkmark/indicator (hidden when not checked) */
    .checkmark:after {
        content: "";
        position: absolute;
        display: none;
    }

    /* Show the checkmark when checked */
    .container input:checked ~ .checkmark:after {
        display: block;
    }

    /* Style the checkmark/indicator */
    .container .checkmark:after {
        left: 9px;
        top: 5px;
        width: 5px;
        height: 10px;
        border: solid white;
        border-width: 0 3px 3px 0;
        -webkit-transform: rotate(45deg);
        -ms-transform: rotate(45deg);
        transform: rotate(45deg);
    }
</style>
<section class="content-header">
    <h1>
        @ViewBag.Title
    </h1>
    <ol class="breadcrumb">
        <li><a href="#"><i class="fa fa-dashboard"></i> Home</a></li>
        <li class="active">@ViewBag.Title</li>
    </ol>
</section>

<!-- Main content -->
<section class="content">
    <!-- Default box -->
    <div class="center-block col-md-6" style="float: none;">    </div>
    <div class="box box-primary">
        <div class="box-header with-border">
            <h3 class="box-title">@ViewBag.Title</h3>
            <div class="box-tools pull-right">
                <button class="btn btn-primary bg-blue-gradient hide-form">Hide</button>
            </div>
        </div>


        <div class="box-body">
            <div class="panel panel-primary col-md-6 center-block" style="float: none;">
                <div class="panel-body">
                    <fieldset>
                        <legend>Role</legend>
                        <div class="form-group">
                            <label for="RoleName">Role Name</label>
                            @Html.DropDownList("DD_Roles", ViewBag.Roles as SelectList, "Please Select", new { @class = "form-control select2", style = "width:100%;" })
                        </div>
                        <div class="text-right">
                            <button type="button" class="btn btn-default" onclick="Call_SetMenuPermissionForRoleId()">Update</button>
                        </div>
                    </fieldset>
                </div>
            </div>

        </div>

    </div>

    <!-- /.box -->
    <!-- Default box -->
    <div class="box box-primary">

        <div class="row">
            <form>
                <div class="col-md-12" id="data_body">
                    <div class="box-body">

                        <div id="menuResult">
                        </div>
                    </div>


                </div>
            </form>
        </div>

        <!-- /.box-body -->
    </div>
    <!-- /.box -->

</section>
<!-- /.content -->
<style>
    ul {
        list-style-type: none;
    }

        ul.checktree li:before {
            height: 1em;
            width: 12px;
            border-bottom: 1px dashed;
            content: "";
            display: inline-block;
            top: -0.3em;
        }

        ul.checktree li {
            border-left: 1px dashed;
        }

            ul.checktree li:last-child:before {
                border-left: 1px dashed;
            }

            ul.checktree li:last-child {
                border-left: none;
            }
</style>
<!-- iCheck -->
<script src="~/plugins/iCheck/icheck.min.js"></script>
<script>
 
    $(function () {
        $("ul.checktree").checktree();
    });
    
    function GetParentID(data) {

        var _parent = $('#' + data).attr("data-parent");
        var v_parent = $('#' + _parent);

        if (v_parent.is(':checked')) {

        }
        else {

            $(v_parent).prop('checked', false);
            var a = 0;
            $("label input:checkbox").each(function () {

                var _data = $(this).data('parent');//_data=100250
                if (_data === parseInt(_parent)) {
                    var v_par = $('#' + _data);
                    $(v_par).each(function () {
                        var obj = document.getElementsByClassName(_parent);
                        var vCh = obj[a].id;
                        $('#' + vCh).prop('checked', false);
                        a++;
                    });
                }
            });
        }
    }

    function GetChildID(data) {

        var _child = $('#' + data);
        var _parent = $('#' + data).attr("data-parent");
        var vChild = $('#' + _parent);

        if (vChild.is(':checked')) {
        }
        else {


            if (vChild.is(':checked')) {
                $(vChild).prop('checked', false);
            }
            else {
                $(vChild).prop('checked', true);
            }
        }
    }

    $(document).ready(function () {
       

        var roleId;
        var data_list;

        $('.select2').select2();

        $('.addnew').hide();

        $('.show-form').click(function () {
            $('.addnew').show();
            $('.show-form').hide();
        });

        $('.hide-form').click(function () {
            $('.addnew').hide();
            $('.show-form').show();
        });
        
        $('#address-tab').attr('class', 'disabled');

        $('#address-tab').click(function (event) {
            if ($(this).hasClass('disabled')) {
                return false;
            }
        });

        $('#submitCompanyInfo').click(function (event) {
            event.preventDefault();


        });

    });
    
    $('#DD_Roles').on('change', function () {
                var roles = $('#DD_Roles').val();
                $.ajax({
            url: '/User/GetMenuPermission/',
            type: 'POST',
            contentType: "application/json;charset=utf-8",
            data: JSON.stringify(
                {
                    roleId: roles
                }
            ),
            dataType: "json",
            success: function (response) {

                $('#menuResult').empty();
                $('#menuResult').append(response);
            }
        });
    });

    function Call_SetMenuPermissionForRoleId() {
        var confirmation = confirm("Do you want to change permittion?");
        if (!confirmation) {
            return;
        }


        var roles = $('#DD_Roles').val();
        var _data = "";
        // var arr = data.split('/');
        $("label input:checkbox").each(function () {


            var
                checkbox = $(this);
            if (checkbox.is(":checked")) {

                if (typeof $(this).attr("data-id") === "undefined") {

                    _data += $(this).attr("data-id") + ',';

                }
                else {

                    _data += $(this).attr("data-id") + ',';

                }
            }


        });

        $.ajax({

            url: '/User/SetMenuPermission',
            type: 'POST',
            contentType: "application/json;charset=utf-8",
            data: JSON.stringify(
                {
                    roleId: roles,
                    menuID: _data
                }
            ),
            dataType: "json",
            async: true,
            processData: false,
            cache: false,
            success: function (data) {
                // alert(data);
                //alert("Menu permittion is successfully changed.");
                toastr.success("Menu permittion is successfully changed.", "Successfully changed", {
                    "positionClass": "toast-top-right",
                    "showDuration": "300",
                    "hideDuration": "1000",
                    "timeOut": "5000",
                    "closeButton": true
                });
                setTimeout(function () {
                  //  location.reload();
                    location.href = '/User/LogOut'
                }, 2000);
               
            },
            error: function (xhr) {
                PlaySound();
                toastr.error("Menu permittion could not be changed due to an error.", "Can't Save . Please Try again", {
                    "positionClass": "toast-top-right",
                    "showDuration": "300",
                    "hideDuration": "1000",
                    "timeOut": "5000",
                    "closeButton": true
                });
               // alert("Menu permittion could not be changed due to an error.");
            }
        });

    }
    
</script>
