@using System;
@using System.Linq;
@using System.Web;
@using System.Text
@using System.Data;
@using FIXED_ASSET.DAL;
@using POSX.Utilities;

@{

    UserDAL _UserDAL = new UserDAL();
    string site_lan = "en";
    HttpCookie cookie = HttpContext.Current.Request.Cookies["Language"];
    if (cookie != null)
    {
        site_lan = cookie.Value;
    }
    ViewBag.site_lan = site_lan;

    if (Session[POSxSession.LoggedUser] == null)
    {
        Response.Redirect("/User/Login");
        return;
    }
    else
    {
        DataTable dtLoggedUser = (DataTable)Session[POSxSession.LoggedUser];
        if (dtLoggedUser.Rows.Count > 0)
        {
            ViewBag.User_Name = dtLoggedUser.Rows[0]["Name"].ToString();
            ViewBag.User_ID = dtLoggedUser.Rows[0]["emp_id"].ToString();
            ViewBag.OutletName = dtLoggedUser.Rows[0]["Organization_Name"].ToString();
        }
    }

}
<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <!-- Tell the browser to be responsive to screen width -->
    <meta content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no" name="viewport">
    <meta name="author" content="Mehedi Hasan | mehedi_aiub@hotmail.com | www.hasanmehedi.com" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>@FIXED_ASSET.Resource.Resource.Application_Name @ViewBag.Title</title>
    <link href="../../Content/css/bootstrap.css" rel="stylesheet" type="text/css" />
    <link rel="Shortcut Icon" href="../../images/favicon.ico" />
    <!-- Font Awesome -->
    <link href="../../Content/css/font-awesome.min.css" rel="stylesheet" type="text/css" />
    <link href="../../Content/css/ionicons.min.css" rel="stylesheet" type="text/css" />
    <link href="../../Content/local.google.fonts.css" rel="stylesheet" type="text/css" />
    <!-- Theme style -->
    <link rel="stylesheet" href="../..//dist/css/AdminLTE.css">
    <link rel="stylesheet" href="../..//dist/css/skins/_all-skins.min.css">
    <link rel="stylesheet" href="../../Content/css/animate.css">
    <link rel="stylesheet" href="~/Content/css/bootstrap-table.css" />
    <link rel="stylesheet" href="~/Content/toastr.css" />
    <script src="~/Scripts/jquery.min.js"></script>

    <script src="~/Content/js/bootstrap-table.min.js"></script>
    <script src="~/Content/js/bootstrap-table-en-US.js"></script>
    <script src="~/Scripts/toastr.js"></script>
</head>
<body class="hold-transition skin-blue sidebar-mini">
    <div class="wrapper">
        <header class="main-header">
            <a href="~/Home" class="logo" data-toggle="tooltip" data-placement="bottom" title="Want to go Home Page? Click Here.">
                <!-- mini logo for sidebar mini 50x50 pixels -->
                <span class="logo-mini"><b style="font-size: 9px;"> @FIXED_ASSET.Resource.Resource.Application_Name </b></span>
                <!-- logo for regular state and mobile devices -->
                <span class="logo-lg"><b>@FIXED_ASSET.Resource.Resource.Application_Name</b></span>
            </a>
            <!-- Header Navbar: style can be found in header.less -->
            <nav class="navbar navbar-static-top">
                <!-- Sidebar toggle button offcanvas-->
                <a href="#" class="sidebar-toggle" data-toggle="offcanvas" data-placement="bottom" role="button" title="Click Here For Enlarge">
                    <span class="sr-only">Toggle navigation</span>
                </a>
                <div class="navbar-custom-menu">
                    <ul class="nav navbar-nav">
                        <!-- Messages: style can be found in dropdown.less-->
                        <li class="dropdown messages-menu">
                            <a href="#" class="dropdown-toggle" data-toggle="dropdown" id="Email">
                                <i class="fa fa-envelope-o wow swing" data-wow-delay="2s" data-wow-iteration="100"></i>
                                <span class="label label-success" id="labelTotalEmail">1<span id="TotalEmail"></span></span>
                            </a>
                            <ul class="dropdown-menu">
                                <li class="header">Software Are Good at Following Instruction but not at Reading your Mind. Because Your Mind Sucks.<span id="TotalEmailheader"></span></li>
                                <li>
                                    <ul class="menu" id="EmailMenu"></ul>
                                </li>

                                <li class="footer"><a href="/Home/All_Email">View all Email</a></li>
                            </ul>
                        </li>
                        <!-- Notifications: style can be found in dropdown.less -->
                        <li class="dropdown notifications-menu">
                            <a href="#" class="dropdown-toggle" data-toggle="dropdown" id="Notification">
                                <i class="fa fa-bell-o wow swing"  data-wow-delay="2s" data-wow-iteration="100"></i>
                                <span class="label label-warning" id="labelTotalNotification">1<span id="TotalNotification"></span></span>
                            </a>
                            <ul class="dropdown-menu">
                                <li class="header"><b>Now you use New Version POSX . If you find any problem please inform MIS </b> <span id="TotalNotificationheader"></span></li>
                                <li>
                                    <!-- inner menu: contains the actual data -->
                                    <ul class="menu" id="NotificationMenu"></ul>
                                </li>
                                <li class="footer"><a href="/Home/All_Notification">View all</a></li>
                            </ul>
                        </li>
                        <!-- Tasks: style can be found in dropdown.less -->
                        <li class="dropdown user user-menu">
                            <a href="#" class="dropdown-toggle" data-toggle="dropdown">
                                <img src="~/dist/img/user2-160x160.jpg" class="user-image" alt="User Image">
                                @*<span class="hidden-xs">@ViewBag.User_Name.ToUpper()ViewBag.USER.USER_NAME.ToString().ToUpper(ViewBag.USER_NAME.ToString().ToUpper()</span>*@
                                <span id="User_ID" class="hidden-xs" data-UserID="@ViewBag.User_ID"> @ViewBag.User_Name.ToUpper()</span>
                            </a>
                            <ul class="dropdown-menu">
                                <!-- User image -->
                                <li class="user-header">
                                    @*<img src="~/Images/ASD_LOGO.png" class="img-circle" alt="User Image">*@
                                    <img src="~/dist/img/user2-160x160.jpg" class="img-circle" alt="User Image">
                                    <p>
                                        @ViewBag.User_Name.ToUpper() @*@ViewBag.USER.USER_NAME.ToString().ToUpper()*@
                                        @*<small>Last LogIn Time -  @ViewBag.LastLoginTime </small>*@
                                    </p>
                                </li>
                                <!-- Menu Body -->
                                <li class="user-body">
                                    <div class="row">
                                    </div>
                                    <!-- /.row -->
                                </li>
                                <!-- Menu Footer-->
                                <li class="user-footer">
                                    <div class="pull-left">
                                        <a href="#" class="btn bg-purple btn-flat margin">Profile</a>
                                    </div>
                                    <div class="pull-right">
                                        <input type="button" class="btn bg-maroon btn-flat margin" value="Sign out" onclick="location.href='@Url.Action("LogOut", "User")'" />
                                    </div>
                                </li>
                            </ul>
                        </li>
                        <!-- Control Sidebar Toggle Button -->
                    </ul>
                </div>
            </nav>
        </header>
        <!-- Left side column. contains the logo and sidebar -->
        <aside class="main-sidebar">
            <!-- sidebar: style can be found in sidebar.less -->
            <section class="sidebar">
                <!-- Sidebar user panel -->
                <div class="user-panel">
                    <div class="pull-left image">
                        <img src="~/dist/img/user2-160x160.jpg" class="img-circle" alt="User Image">
                    </div>
                    <div class="pull-left info">
                        <p>
                            @*@ViewBag.USER.USER_NAME.ToString().ToUpper()*@
                        </p>
                        <a href="#" style="font-size: 14px;"><i id="in_Status" class="fa fa-circle text-success wow pulse infinite"></i> @ViewBag.OutletName</a>
                    </div>
                </div>
                <!-- search form -->
                <form action="#" method="get" class="sidebar-form">
                    <div class="input-group">
                        <input type="text" name="q" class="form-control" placeholder="Search..." autocomplete="off">
                        <span class="input-group-btn">
                            <button type="submit" name="search" id="search-btn" class="btn btn-flat">
                                <i class="fa fa-search"></i>
                            </button>
                        </span>
                    </div>
                </form>

                @functions
                {
                    readonly StringBuilder _subMenu = new StringBuilder();
                    private int _ParentCount, _childCount, _child_childCount, childCount3;

                    UserDAL _UserDAL = new UserDAL();

                    private string GetMenuItems(int parentId)
                    {

                        DataTable _LoggedUser = (DataTable)Session[POSxSession.LoggedUser];
                        if (_LoggedUser.Rows.Count > 0)
                        {
                            //UserMenuDetails

                            // string _UserID = _LoggedUser.Rows[0]["emp_id"].ToString();
                            //   string _Device_ID = POSX.Controllers.BaseController._Device_ID;

                            string _Created_By = _LoggedUser.Rows[0]["emp_id"].ToString();
                            string _Device_ID = _Created_By;


                            string _OutLetRegNo = FIXED_ASSET.Controllers.BaseController._OutLetRegNo;

                            string _Version = FIXED_ASSET.Controllers.BaseController._Version;
                            ViewBag.Version = _Version;

                            //  DataTable _MenueTable = _UserDAL.UserMenuDetails(_Created_By, _Device_ID, _OutLetRegNo);

                            DataTable _MenueTable = new DataTable(); //_UserDAL.UserMenuDetails(_Created_By, _Device_ID, _OutLetRegNo);
                            if (Session[POSxSession.UserMenuDetails] == null)
                            {
                                _MenueTable = _UserDAL.UserMenuDetails(_Created_By, _Device_ID, _OutLetRegNo);
                                Session[POSxSession.UserMenuDetails] = _MenueTable;
                            }
                            else
                            {
                                _MenueTable = (DataTable)Session[POSxSession.UserMenuDetails];
                            }

                            DataRow[] foundRows, foundRows2, foundRows3, foundRows4;
                            string strExpr = "PARENT_ID =" + parentId;

                            //_childCount = dbContext.t_Menu.Count(m => m.MENU_PARENT_ID == obj.MENU_ID);
                            foundRows = _MenueTable.Select(strExpr, "");
                            // _MenueTable.RowFilter = "ProductID = 35";

                            _ParentCount = foundRows.Count();


                            if (foundRows.Length > 0)
                            {
                                for (int i = 0; i < foundRows.Length; i++)
                                {
                                    int ME_ID = Convert.ToInt32(foundRows[i]["ME_ID"].ToString());

                                    string strExpr2 = "PARENT_ID =" + ME_ID;
                                    foundRows2 = _MenueTable.Select(strExpr2, "");
                                    _childCount = foundRows2.Count();

                                    string Menu_Name = "";

                                    if (_childCount > 0)
                                    {
                                        _subMenu.Append("<li class='treeview'><a href='#'><i class='" + foundRows[i]["GLYPHICON"].ToString() + "'></i> <span>"
                                                      + foundRows[i]["MENAME"].ToString() + "</span><span class='pull-right-container'><i class='fa fa-angle-left pull-right'>"
                                              + "</i></span></a><ul class='treeview-menu'>");
                                        Menu_Name = foundRows[i]["MENAME"].ToString();

                                        foreach (DataRow row in foundRows2)
                                        {
                                            Menu_Name = row["MENAME"].ToString();
                                            if (row["IS_POPUP"].ToString() == "True")
                                            {
                                                string menuURL = row["CONTROLLER"].ToString() + "//" + row["ACTION_URL"].ToString();
                                                int MID = Convert.ToInt32(row["ME_ID"].ToString());

                                                _subMenu.Append("<li><a id='" + MID + "' href='javascript:winPopUp(" + MID + ");' data-Controller='" + row["CONTROLLER"].ToString()
                                                           + "' data-ACTION_URL='" + row["ACTION_URL"].ToString() + "' target ='_self' ><i class='" + row["GLYPHICON"].ToString()
                                                             + "'></i><span>" + row["MENAME"].ToString() + "</span></a></li>");
                                            }
                                            else
                                            {

                                                string strExpr3 = "PARENT_ID =" + row["ME_ID"];
                                                foundRows3 = _MenueTable.Select(strExpr3, "");
                                                _child_childCount = foundRows3.Count();


                                                if (_child_childCount > 0)
                                                {

                                                    Menu_Name = row["MENAME"].ToString();
                                                    _subMenu.Append("<li class='treeview'><a href='#'><i class='" + row["GLYPHICON"].ToString() + "'></i> <span>"
                                                                         + row["MENAME"].ToString() + "</span><span class='pull-right-container'><i class='fa fa-angle-left pull-right'>"
                                                                 + "</i></span></a><ul class='treeview-menu'>");


                                                    strExpr3 = "PARENT_ID =" + row["ME_ID"];
                                                    foundRows3 = _MenueTable.Select(strExpr3, "");

                                                    _child_childCount = foundRows3.Count();


                                                    foreach (DataRow rowss in foundRows3)
                                                    {

                                                        string strExpr4 = "PARENT_ID =" + rowss["ME_ID"];
                                                        foundRows4 = _MenueTable.Select(strExpr4, "");
                                                        childCount3 = foundRows4.Count();

                                                        if (childCount3 > 0)
                                                        {
                                                            Menu_Name = rowss["MENAME"].ToString();

                                                            _subMenu.Append("<li class='treeview'><a href='#'><i class='" + rowss["GLYPHICON"].ToString() + "'></i> <span>"
                                                                                   + rowss["MENAME"].ToString() + "</span><span class='pull-right-container'><i class='fa fa-angle-left pull-right'>"
                                                                           + "</i></span></a><ul class='treeview-menu'>");



                                                            foreach (DataRow row4 in foundRows4)
                                                            {

                                                                Menu_Name = row4["MENAME"].ToString();
                                                              //  Menu_Name = rowss["MENAME"].ToString();
                                                                _subMenu.Append("<li><a target='_self' href='..//" + row4["CONTROLLER"].ToString()
                                                                                                                     + "/" + row4["ACTION_URL"].ToString() + "'><i class='" + row4["GLYPHICON"].ToString()
                                                                                                                     + "'></i><span>" + row4["MENAME"].ToString() + "</span></a></li>");

                                                            }
                                                            _subMenu.Append("</ul></li>");




                                                        }

                                                        else
                                                        {
                                                            Menu_Name = rowss["MENAME"].ToString();
                                                            _subMenu.Append("<li><a target='_self' href='..//" + rowss["CONTROLLER"].ToString()
                                                                                                                 + "/" + rowss["ACTION_URL"].ToString() + "'><i class='" + rowss["GLYPHICON"].ToString()
                                                                                                                 + "'></i><span>" + rowss["MENAME"].ToString() + "</span></a></li>");


                                                        }





                                                    }





                                                    _subMenu.Append("</ul></li>");
                                                    // }

                                                }
                                                else
                                                {
                                                    Menu_Name = row["MENAME"].ToString();
                                                    _subMenu.Append("<li><a target='_self' href='..//" + row["CONTROLLER"].ToString()
                                                                                                      + "/" + row["ACTION_URL"].ToString() + "'><i class='" + row["GLYPHICON"].ToString()
                                                                                                      + "'></i><span>" + row["MENAME"].ToString() + "</span></a></li>");
                                                }
                                            }
                                        }

                                        _subMenu.Append("</ul></li>");

                                    }
                                    else
                                    {

                                        _subMenu.Append("<li><a target='_self' href='..//" + foundRows[i]["CONTROLLER"].ToString()
                                      + "/" + foundRows[i]["ACTION_URL"].ToString() + "'><i class='" + foundRows[i]["GLYPHICON"].ToString()
                                      + "'></i><span>" + foundRows[i]["MENAME"].ToString() + "</span></a></li>");
                                    }
                                }
                            }
                        }
                        return _subMenu.ToString();
                    }

                    private StringBuilder LoadDynamicMenu()
                    {
                        var sbMenu = new StringBuilder();
                        sbMenu.Append(" <ul class='sidebar-menu'> <li class='header'>MAIN NAVIGATION</li>");
                        string childItems = GetMenuItems(0);
                        sbMenu.Append(childItems);
                        sbMenu.Append(" </ul>");
                        return sbMenu;
                    }

                        }

                        @Html.Raw(LoadDynamicMenu())

            </section>
            <!-- /.sidebar -->
        </aside>
        <!-- Content Wrapper.Contains page content -->
        <div class="content-wrapper">
            <!-- Main content -->
            @RenderBody()

            @RenderSection("scripts", required: false)


            <!-- /.content -->
        </div>
        <audio id="audio" src="~/sounds/beep.wav" autostart="false"></audio>
        <!-- /.content-wrapper -->
        <footer class="main-footer">
            <div class="pull-right hidden-xs">
                <b>Version</b> @ViewBag.Version

            </div>
            <strong>
                Powered By -
            </strong>
            <a href="http://www.lottobangladesh.com">
                <img src="~/Images/lotto_LOGO.jpg" style="height: 17px;" />
            </a>
        </footer>
    </div>
    <!-- ./wrapper -->
    <link href="~/Content/Site.css" rel="stylesheet" />

    <script src="~/Scripts/bootstrap.min.js">
    </script>
    <!--AdminLTE App -->
    <script src="../..//dist/js/app.min.js"></script>
    <script src="~/Content/js/wow.min.js"></script>
    <script>
        $(document).ready(function () {
            new WOW().init();

            $("#back-to-top").tooltip("show");

        });

        function PlaySound() {
            var sound = document.getElementById("audio");
            sound.play()
        }
        //URL
        function winPopUp(MID) {

            var Cname = $('#' + MID).attr("data-Controller");
            var Aname = $('#' + MID).attr("data-ACTION_URL");
            var URL = Cname + "/" + Aname;
            day = new Date();
            id = day.getTime();
            str = 'addressbar=0,toolbar=0,scrollbars=1,location=0,statusbar=0,menubar=0,resizable=0,screenX=0,screenY=0,top=0,left=0,maximize=0,'
            str = str + 'height=' + screen.availHeight + ', width=' + screen.availWidth
            eval('page' + id + '=window.open(URL, id,str )')
        }

        window.addEventListener('load', function () {

            function updateOnlineStatus(event) {

                var condition = navigator.onLine ? "online" : "offline";
                // alert(condition);
                if (condition == "online") {
                    //  $('#in_Status').addClass('fa fa-circle text-success wow pulse infinite');
                    $('#in_Status').removeClass("fa fa-circle text-danger wow pulse infinite").addClass("fa fa-circle text-success wow pulse infinite");
                }
                else {
                    // $('#in_Status').addClass('fa fa-circle text-denger wow pulse infinite');
                    $('#in_Status').removeClass("fa fa-circle text-success wow pulse infinite").addClass("fa fa-circle text-danger wow pulse infinite");
                }

            }

            window.addEventListener('online', updateOnlineStatus);
            window.addEventListener('offline', updateOnlineStatus);
        });


        //        //Script courtesy of BoogieJack.com
        //        var message = "NoRightClicking";
        //        function defeatIE() { if (document.all) { (message); return false; } }
        //        function defeatNS(e) {
        //            if
        //(document.layers || (document.getElementById && !document.all)) {
        //                if (e.which == 2 || e.which == 3) { (message); return false; }
        //            }
        //        }
        //        if (document.layers) { document.captureEvents(Event.MOUSEDOWN); document.onmousedown = defeatNS; }
        //        else { document.onmouseup = defeatNS; document.oncontextmenu = defeatIE; }
        //        document.oncontextmenu = new Function("return false")

  
            //Script courtesy of hasanmehedi.com
       // --------------------------------------------------------
//        var message = "NoRightClicking";
//function defeatIE() {if (document.all) {(message);return false;}}
//function defeatNS(e) {if
//            (document.layers||(document.getElementById&&!document.all)) {
//if (e.which==2||e.which==3) {(message);return false;}}}
//if (document.layers)
//{document.captureEvents(Event.MOUSEDOWN);document.onmousedown=defeatNS;}
//else{document.onmouseup = defeatNS;document.oncontextmenu=defeatIE;}
//document.oncontextmenu=new Function("return false")
  //-----------------------------------
    </script>

    <style>
        .main-footer {
            padding: 7px;
        }
    </style>
</body>


</html>